{"version":3,"sources":["components/Annotations.js","client/index.js","utils/intervals.js","components/App.js","reportWebVitals.js","index.js"],"names":["Annotations","annotations","scale","useState","x","y","dy","dx","props","setProps","map","annotation","index","_x","_y","color","editMode","note","title","label","align","orientation","bgPadding","padding","titleColor","onDrag","e","client","forge","clientId","host","resources","Readings","list","path","headers","middleware","response","next","then","parse","data","columns","cast","value","column","parseInt","parseFloat","getSortedBoundaries","a","b","boundaries","forEach","from","to","push","source","status","sort","walkBoundaries","getStatus","start","lastStatus","results","statuses","newStatus","colors","SelectDataContainer","createContainer","START_DATE","Date","now","App","series","setSeries","setAnnotations","voronoiData","setVoronoiData","seriesColor","setSeriesColor","fetchedIntervals","setFetchedIntervals","fetchInterval","gap","statusA","statusB","difference","records","newSeries","groupBy","prop","newColors","Object","keys","seriesId","length","key","concat","ascend","union","catch","error","console","initialInterval","valueOf","useEffect","handleClickLegend","useCallback","log","clickChart","className","onClick","style","backgroundColor","display","width","height","window","innerHeight","innerWidth","minDomain","maxDomain","containerComponent","zoomDimension","zoomDomain","responsive","onZoomDomainChange","domain","allowPan","allowZoom","labels","datum","reading","onActivated","points","events","samples","fill","Math","max","SunCalc","getPosition","altitude","PI","min","item","name","strokeWidth","stroke","parent","border","grid","dependentAxis","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAoCeA,EAjCK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAClC,EAA0BC,mBAAS,CACjCC,EAAG,GACHC,EAAG,GACHC,GAAI,GACJC,GAAI,KAJN,mBAAOC,EAAP,KAAcC,EAAd,KAOA,OAAOR,EAAYS,KAAI,SAACC,EAAYC,GAClC,OACE,cAAC,kBAAD,CAEER,EAAGF,EAAME,EAAEO,EAAWE,IACtBR,EAAGH,EAAMG,EAAEM,EAAWG,IACtBP,GAAIC,EAAMD,GACVD,GAAIE,EAAMF,GACVS,MAAO,OACPC,UAAU,EACVC,KAAM,CACJC,MAAO,iBACPC,MAAO,oCACPC,MAAO,SACPC,YAAa,YACbC,UAAW,GACXC,QAAS,GACTC,WAAY,QAEdC,OAAQ,SAACC,GAAD,OAAOjB,EAASiB,KAhBnBd,O,iFCuBEe,EAdA,IAAIC,IAAM,CACvBC,SAAU,WACVC,KAAM,6DACNC,UAAW,CACTC,SAAU,CACRC,KAAM,CACJC,KAAM,YACNC,QAAS,CAAE,YAAa,4CACxBC,WAAY,CA5BS,iBAAO,CAClCC,SADkC,SACzBC,GACP,OAAOA,IAAOC,MAAK,SAACF,GAAD,OACjBG,IAAMH,EAASI,OAAQ,CACrBC,SAAS,EACTC,KAAM,SAACC,EAAD,GACJ,OAD2B,EAAbC,QAEZ,IAAK,YACH,OAAOC,SAASF,GAClB,IAAK,UACH,OAAOG,WAAWH,GACpB,QACE,OAAOA,kBCfRI,EAAsB,SAACC,EAAGC,GACrC,IAAMC,EAAa,GAWnB,OATAF,EAAEG,SAAQ,YAAiB,IAAD,mBAAdC,EAAc,KAARC,EAAQ,KACxBH,EAAWI,KAAK,CAAEnD,EAAGiD,EAAMG,OAAQ,IAAKC,QAAQ,IAChDN,EAAWI,KAAK,CAAEnD,EAAGkD,EAAIE,OAAQ,IAAKC,QAAQ,OAEhDP,EAAEE,SAAQ,YAAiB,IAAD,mBAAdC,EAAc,KAARC,EAAQ,KACxBH,EAAWI,KAAK,CAAEnD,EAAGiD,EAAMG,OAAQ,IAAKC,QAAQ,IAChDN,EAAWI,KAAK,CAAEnD,EAAGkD,EAAIE,OAAQ,IAAKC,QAAQ,OAGzCN,EAAWO,MAAK,SAACT,EAAGC,GAAJ,OAAUD,EAAE7C,EAAI8C,EAAE9C,MAG9BuD,EAAiB,SAACR,EAAYS,GACzC,IAEIC,EAFAC,GAAa,EACXC,EAAU,GAGVC,EAAW,CACff,GAAG,EACHC,GAAG,GAmBL,OAhBAC,EAAWC,SAAQ,YAA4B,IAAzBhD,EAAwB,EAAxBA,EAAGoD,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAC/BO,EAASR,GAAUC,EAEnB,IAAMQ,EAAYL,EAAUI,EAAQ,EAAOA,EAAQ,GAE/CF,IAAeG,IACbA,EACFJ,EAAQzD,EAER2D,EAAQR,KAAK,CAACM,EAAOzD,IAGvB0D,EAAaG,MAIVF,GChCHG,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,WAEtDC,EAAsBC,YAAgB,OAAQ,WAG9CC,EAAa,IAAIC,KAAK,aAEtBC,EAAM,IAAID,KA4KDE,EA1KH,WACV,MAA4BrE,qBAA5B,mBAAOsE,EAAP,KAAeC,EAAf,KACA,EAAsCvE,mBAAS,IAA/C,mBAAOF,EAAP,KAAoB0E,EAApB,KACA,EAAsCxE,qBAAtC,mBAAOyE,EAAP,KAAoBC,EAApB,KAEA,EAAsC1E,mBAAS,IAA/C,mBAAO2E,EAAP,KAAoBC,EAApB,KAEA,EAAgD5E,mBAAS,IAAzD,mBAAO6E,EAAP,KAAyBC,EAAzB,KAEMC,EAAgB,SAAC7B,EAAMC,GAC3B,GAAKD,GAASC,EAAd,CAGA,IAEM6B,EDWgB,SAAClC,EAAGC,GAC5B,IAAMC,EAAaH,EAAoBC,EAAGC,GAE1C,OAAOS,EAAeR,GAAY,SAACiC,EAASC,GAAV,OAAsBD,IAAYC,KChBrDC,CAAW,CAAC,CAACjC,EAAMC,IAAM0B,GAErB,GACZG,GAILxD,EAAOK,SAASC,KAAK,CAAEoB,KAAM8B,EAAI,GAAI7B,GAAI6B,EAAI,KAC1C5C,MAAK,SAACgD,GACL,IAAMC,EAAYC,YAAQC,YAAK,UAAbD,CAAwBF,GAEpCI,EAAS,eAAQb,GAEvBc,OAAOC,KAAKL,GAAWpC,SAAQ,SAAC0C,EAAUlF,GACnCkE,EAAYgB,KACfH,EAAUG,GAAY5B,EAAOtD,EAAQsD,EAAO6B,YAGhDhB,EAAeY,GAEXlB,GACFmB,OAAOC,KAAKpB,GAAQrB,SAAQ,SAAC4C,GACvBR,EAAUQ,GACZR,EAAUQ,GAAOR,EAAUQ,GAAKC,OAAOxB,EAAOuB,IAAMtC,KAAKwC,YAAOR,YAAK,eAErEF,EAAUQ,GAAOvB,EAAOuB,MAI9BtB,EAAUc,GACVP,EDLa,SAAChC,EAAGC,GACvB,IAAMC,EAAaH,EAAoBC,EAAGC,GAE1C,OAAOS,EAAeR,GAAY,SAACiC,EAASC,GAAV,OAAsBD,GAAWC,KCEzCc,CAAMnB,EAAkB,CAACG,QAE9CiB,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,QAG9BE,EAAkB,CAAChC,EAAIiC,UAAY,OAASjC,EAAIiC,WAEtDC,qBAAU,WACRvB,EAAcqB,EAAgB,GAAIA,EAAgB,MACjD,IAEH,IAMMG,EAAoBC,uBAAY,SAACX,GACrCM,QAAQM,IAAIZ,KACX,IAEGa,EAAaF,uBAAY,WAC7BL,QAAQM,IAAIjC,EAAeC,MAC1B,CAACA,IAEJ,OACE,sBAAKkC,UAAU,MAAf,UACGrC,GACCmB,OAAOC,KAAKpB,GAAQ/D,KAAI,SAACsF,GAAD,OACtB,uBAAMe,QAAS,kBAAML,EAAkBV,IAAMgB,MAAO,CAAEzF,QAAS,GAA/D,UACE,sBACEyF,MAAO,CACLC,gBAAiBnC,EAAYkB,GAC7BkB,QAAS,eACTC,MAAO,GACPC,OAAQ,MAEH,IACRpB,QAIP,eAAC,IAAD,CACEzE,QAAS,GACT6F,OAAQC,OAAOC,YAAc,IAC7BH,MAAOE,OAAOE,WACdrH,MAAO,CAAEE,EAAG,QACZoH,UAAW,CAAEpH,EAAGiE,EAAYhE,GAAI,IAChCoH,UAAW,CAAErH,EAAGmE,EAAKlE,EAAG,IACxBqH,mBACE,cAACvD,EAAD,CACEwD,cAAc,IACdC,WAAY,CAAExH,EAAGmG,GACjBsB,YAAY,EACZC,mBA3CkB,SAACC,GAG3B7C,EAAc6C,EAAO3H,EAAE,GAAGoG,UAAWuB,EAAO3H,EAAE,GAAGoG,YAyCzCwB,UAAU,EACVC,WAAW,EACXC,OAAQ,YAAgB,IAAbC,EAAY,EAAZA,MAET,OAAOA,EAAMC,SAAWD,EAAM9H,GAEhCgI,YAAa,SAACC,GAAD,OAAYzD,EAAeyD,IACxCC,OAAQ,CAAExB,QAASF,KApBzB,UAwBE,cAAC,IAAD,CACE2B,QAAS,IACTxB,MAAO,CAAEvE,KAAM,CAAEgG,KAAM,YACvBpI,EAAG,SAACoC,GACF,OAAOiG,KAAKC,IACV,EACgE,IAA/DC,IAAQC,YAAYpG,EAAKrC,EAAG,WAAY,YAAY0I,SAAkBJ,KAAKK,OAKlF,cAAC,IAAD,CACEP,QAAS,IACTxB,MAAO,CAAEvE,KAAM,CAAEgG,KAAM,SACvBpI,EAAG,SAACoC,GACF,OAAOiG,KAAKM,IACV,EACgE,IAA/DJ,IAAQC,YAAYpG,EAAKrC,EAAG,WAAY,YAAY0I,SAAkBJ,KAAKK,OAKjFtE,GACCmB,OAAOC,KAAKpB,GAAQ/D,KAAI,SAACsF,GACvB,IAAMiD,EAAOxE,EAAOuB,GACpB,OACE,cAAC,IAAD,CAEEkD,KAAMlD,EACNgB,MAAO,CACLvE,KAAM,CACJ0G,YAAa,EACbC,OAAQtE,EAAYkB,IAEtBqD,OAAQ,CAAEC,OAAO,mBAEnB7G,KAAMwG,EACN7I,EAAG,YACHC,EAAG,WAXE2F,MAgBb,cAAC,IAAD,CACEgB,MAAO,CACLuC,KAAM,CAAEH,OAAQ,UAAWD,YAAa,OAG5C,cAAC,IAAD,CACEK,eAAa,EACbxC,MAAO,CACLuC,KAAM,CAAEH,OAAQ,UAAWD,YAAa,OAI5C,cAAC,EAAD,CAAalJ,YAAaA,WC1KnBwJ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpH,MAAK,YAAkD,IAA/CqH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.389a5ba2.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { AnnotationLabel } from 'react-annotation'\n\nconst Annotations = ({ annotations, scale }) => {\n  const [props, setProps] = useState({\n    x: 10,\n    y: 10,\n    dy: 50,\n    dx: 50,\n  })\n\n  return annotations.map((annotation, index) => {\n    return (\n      <AnnotationLabel\n        key={index}\n        x={scale.x(annotation._x)}\n        y={scale.y(annotation._y)}\n        dx={props.dx}\n        dy={props.dy}\n        color={'#333'}\n        editMode={true}\n        note={{\n          title: 'Annotations :)',\n          label: 'Longer text to show text wrapping',\n          align: 'middle',\n          orientation: 'topBottom',\n          bgPadding: 10,\n          padding: 10,\n          titleColor: '#666',\n        }}\n        onDrag={(e) => setProps(e)}\n      />\n    )\n  })\n}\n\nexport default Annotations\n","import forge from 'mappersmith'\nimport parse from 'csv-parse/lib/sync'\n\nconst ParseDattaMiddleware = () => ({\n  response(next) {\n    return next().then((response) =>\n      parse(response.data(), {\n        columns: true,\n        cast: (value, { column }) => {\n          switch (column) {\n            case 'timestamp':\n              return parseInt(value)\n            case 'reading':\n              return parseFloat(value)\n            default:\n              return value\n          }\n        },\n      })\n    )\n  },\n})\n\nconst client = new forge({\n  clientId: 'readings',\n  host: 'https://if2574leol.execute-api.us-east-2.amazonaws.com/dev',\n  resources: {\n    Readings: {\n      list: {\n        path: '/readings',\n        headers: { 'x-api-key': 'esHC6lRZzJ2R2dnKXVI6157bY5wirAkh6uznnGaU' },\n        middleware: [ParseDattaMiddleware],\n      },\n    },\n  },\n})\n\nexport default client\n","export const getSortedBoundaries = (a, b) => {\n  const boundaries = []\n\n  a.forEach(([from, to]) => {\n    boundaries.push({ x: from, source: 'a', status: true })\n    boundaries.push({ x: to, source: 'a', status: false })\n  })\n  b.forEach(([from, to]) => {\n    boundaries.push({ x: from, source: 'b', status: true })\n    boundaries.push({ x: to, source: 'b', status: false })\n  })\n\n  return boundaries.sort((a, b) => a.x - b.x)\n}\n\nexport const walkBoundaries = (boundaries, getStatus) => {\n  let lastStatus = false\n  const results = []\n  let start\n\n  const statuses = {\n    a: false,\n    b: false,\n  }\n\n  boundaries.forEach(({ x, source, status }) => {\n    statuses[source] = status\n\n    const newStatus = getStatus(statuses['a'], statuses['b'])\n\n    if (lastStatus !== newStatus) {\n      if (newStatus) {\n        start = x\n      } else {\n        results.push([start, x])\n      }\n\n      lastStatus = newStatus\n    }\n  })\n\n  return results\n}\n\nexport const difference = (a, b) => {\n  const boundaries = getSortedBoundaries(a, b)\n\n  return walkBoundaries(boundaries, (statusA, statusB) => statusA && !statusB)\n}\n\nexport const intersection = (a, b) => {\n  const boundaries = getSortedBoundaries(a, b)\n\n  return walkBoundaries(boundaries, (statusA, statusB) => statusA && statusB)\n}\n\nexport const union = (a, b) => {\n  const boundaries = getSortedBoundaries(a, b)\n\n  return walkBoundaries(boundaries, (statusA, statusB) => statusA || statusB)\n}\n","import { useEffect, useState, useCallback } from 'react'\nimport { VictoryChart, VictoryAxis, VictoryLine, VictoryArea, createContainer } from 'victory'\nimport Annotations from './Annotations'\nimport { ascend, groupBy, prop } from 'ramda'\nimport SunCalc from 'suncalc'\nimport client from '../client'\n\nimport { difference, union } from '../utils/intervals'\n\nconst colors = ['#9e6864', '#3f0f63', '#35868c', '#f24b3f', '#6d9c49']\n\nconst SelectDataContainer = createContainer('zoom', 'voronoi')\n\nconst DAY = 24 * 3600 * 1000\nconst START_DATE = new Date('1/26/2021')\n\nconst now = new Date()\n\nconst App = () => {\n  const [series, setSeries] = useState()\n  const [annotations, setAnnotations] = useState([])\n  const [voronoiData, setVoronoiData] = useState()\n\n  const [seriesColor, setSeriesColor] = useState({})\n\n  const [fetchedIntervals, setFetchedIntervals] = useState([])\n\n  const fetchInterval = (from, to) => {\n    if (!from || !to) {\n      return\n    }\n    const gaps = difference([[from, to]], fetchedIntervals)\n\n    const gap = gaps[0]\n    if (!gap) {\n      return\n    }\n\n    client.Readings.list({ from: gap[0], to: gap[1] })\n      .then((records) => {\n        const newSeries = groupBy(prop('source'))(records)\n\n        const newColors = { ...seriesColor }\n\n        Object.keys(newSeries).forEach((seriesId, index) => {\n          if (!seriesColor[seriesId]) {\n            newColors[seriesId] = colors[index % colors.length]\n          }\n        })\n        setSeriesColor(newColors)\n\n        if (series)\n          Object.keys(series).forEach((key) => {\n            if (newSeries[key]) {\n              newSeries[key] = newSeries[key].concat(series[key]).sort(ascend(prop('timestamp')))\n            } else {\n              newSeries[key] = series[key]\n            }\n          })\n\n        setSeries(newSeries)\n        setFetchedIntervals(union(fetchedIntervals, [gap]))\n      })\n      .catch((error) => console.error(error))\n  }\n\n  const initialInterval = [now.valueOf() - 3 * DAY, now.valueOf()]\n\n  useEffect(() => {\n    fetchInterval(initialInterval[0], initialInterval[1])\n  }, [])\n\n  const handleDomainChanged = (domain) => {\n    // setZoomDomainX(domain.x)\n\n    fetchInterval(domain.x[0].valueOf(), domain.x[1].valueOf())\n  }\n\n  const handleClickLegend = useCallback((key) => {\n    console.log(key)\n  }, [])\n\n  const clickChart = useCallback(() => {\n    console.log(setAnnotations(voronoiData))\n  }, [voronoiData])\n\n  return (\n    <div className=\"App\">\n      {series &&\n        Object.keys(series).map((key) => (\n          <span onClick={() => handleClickLegend(key)} style={{ padding: 5 }}>\n            <span\n              style={{\n                backgroundColor: seriesColor[key],\n                display: 'inline-block',\n                width: 20,\n                height: 20,\n              }}\n            ></span>{' '}\n            {key}\n          </span>\n        ))}\n\n      <VictoryChart\n        padding={25}\n        height={window.innerHeight - 100}\n        width={window.innerWidth}\n        scale={{ x: 'time' }}\n        minDomain={{ x: START_DATE, y: -30 }}\n        maxDomain={{ x: now, y: 55 }}\n        containerComponent={\n          <SelectDataContainer\n            zoomDimension=\"x\"\n            zoomDomain={{ x: initialInterval }}\n            responsive={false}\n            onZoomDomainChange={handleDomainChanged}\n            allowPan={true}\n            allowZoom={true}\n            labels={({ datum }) => {\n              // console.log(datum)\n              return datum.reading || datum.y\n            }}\n            onActivated={(points) => setVoronoiData(points)}\n            events={{ onClick: clickChart }}\n          />\n        }\n      >\n        <VictoryArea\n          samples={500}\n          style={{ data: { fill: '#ffee99' } }}\n          y={(data) => {\n            return Math.max(\n              0,\n              (SunCalc.getPosition(data.x, 45.060879, -93.2219807).altitude * 180) / Math.PI\n            )\n          }}\n        />\n\n        <VictoryArea\n          samples={500}\n          style={{ data: { fill: '#78c' } }}\n          y={(data) => {\n            return Math.min(\n              0,\n              (SunCalc.getPosition(data.x, 45.060879, -93.2219807).altitude * 180) / Math.PI\n            )\n          }}\n        />\n\n        {series &&\n          Object.keys(series).map((key) => {\n            const item = series[key]\n            return (\n              <VictoryLine\n                key={key}\n                name={key}\n                style={{\n                  data: {\n                    strokeWidth: 1,\n                    stroke: seriesColor[key],\n                  },\n                  parent: { border: `1px solid #666` },\n                }}\n                data={item}\n                x={'timestamp'}\n                y={'reading'}\n              />\n            )\n          })}\n\n        <VictoryAxis\n          style={{\n            grid: { stroke: '#818e99', strokeWidth: 0.5 },\n          }}\n        />\n        <VictoryAxis\n          dependentAxis\n          style={{\n            grid: { stroke: '#818e99', strokeWidth: 0.5 },\n          }}\n        />\n\n        <Annotations annotations={annotations} />\n      </VictoryChart>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}